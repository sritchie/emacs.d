((("not" .
   [1 0 0])
  ("the" .
   [2 0 0])
  ("CXX" .
   [1 0 0])
  ("suffix" .
   [1 0 0 0 0 0])
  ("this" .
   [1 0 0 0])
  ("toArray" .
   [2 0 0 0 0 0 0])
  ("Array" .
   [4 0 0 0 0])
  ("haskell-mode" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":signup" .
   [2 0 0 0 0 0 0])
  (":facebook" .
   [1 0 0 0 0 0 0 0 0])
  ("user/generate-user" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":timeout-ms" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("authResponse" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("if" .
   [1 0])
  ("fb/facebook-login!" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("callback" .
   [2 0 0 0 0 0 0 0])
  (":callback" .
   [1 0 0 0 0 0 0 0 0])
  (":data" .
   [1 0 0 0 0])
  (":type" .
   [1 0 0 0 0])
  ("::route/facebook" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("r/server-req" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("r" .
   [1])
  (":as" .
   [1 0 0])
  ("ring-routes" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":ring-routes" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("params" .
   [2 0 0 0 0 0])
  ("v/validate-by" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  (":username" .
   [1 0 0 0 0 0 0 0 0])
  ("email" .
   [1 0 0 0 0])
  ("validator" .
   [1 0 0 0 0 0 0 0 0])
  ("current" .
   [1 0 0 0 0 0 0])
  ("user/me" .
   [2 0 0 0 0 0 0])
  ("::user" .
   [1 0 0 0 0 0])
  (":email" .
   [3 0 0 0 0 0])
  ("unique-new-email?" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("user/UserDoc" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("user/User" .
   [2 0 0 0 0 0 0 0 0])
  ("user" .
   [8 0 0 0])
  ("username" .
   [4 0 0 0 0 0 0 0])
  (":failed" .
   [1 0 0 0 0 0 0])
  ("false" .
   [3 0 0 0 0])
  (":signed?" .
   [3 0 0 0 0 0 0 0])
  (":init-state" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("signed?" .
   [3 0 0 0 0 0 0])
  ("signed" .
   [1 0 0 0 0 0])
  ("put" .
   [2 0 0])
  ("o" .
   [3])
  ("phone-field" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("preferred-time-field" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("value" .
   [4 0 0 0 0])
  ("s/Str" .
   [3 0 0 0 0])
  ("contact-phone" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("preferred-time" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":preferred-time" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":contact-phone" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":demo?" .
   [1 0 0 0 0 0])
  ("@state" .
   [8 0 0 0 0 0])
  ("form" .
   [2 0 0 0])
  (":end-date" .
   [2 0 0 0 0 0 0 0 0])
  (":start-date" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("put!" .
   [3 0 0 0])
  ("router" .
   [15 0 0 0 0 0])
  ("render-state" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("#js" .
   [1 0 0])
  (".datepicker" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (".-value" .
   [2 0 0 0 1 0 0])
  (".-target" .
   [2 0 0 0 1 0 0 0])
  ("js/console" .
   [3 0 0 0 0 0 0 0 0 0])
  (".log" .
   [2 0 0 0])
  (":on-change" .
   [1 0 0 0 0 0 1 0 0 0])
  ("inline" .
   [2 0 0 0 0 0])
  ("u/merge-props" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("data" .
   [7 0 0 0])
  ("base" .
   [2 0 0 0])
  ("opts" .
   [6 0 0 0])
  ("node" .
   [1 0 0 0])
  ("om/get-node" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("state" .
   [3 0 0 0 0])
  ("router-ch" .
   [2 0 0 0 0 0 0 0 0])
  ("owner" .
   [7 0 0 0 0])
  ("did-mount" .
   [1 0 0 0 0 0 0 0 0])
  ("js/$" .
   [1 0 0 0])
  ("defcomponentk" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("datepicker" .
   [3 0 0 0 0 0 0 0 0 0])
  ("monoid" .
   [1 0 0 0 0 0])
  ("zero" .
   [1 0 0 0])
  ("Paypal" .
   [0 0 0 0 0 1])
  ("stripe" .
   [2 0 0 0 0 0])
  (":or" .
   [1 0 0])
  ("paypal" .
   [2 0 0 0 0 0])
  (":paypal" .
   [1 0 0 0 0 0 0])
  (":stripe" .
   [1 0 0 0 0 0 0])
  ("empty-summary" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":refunds" .
   [1 0 0 0 0 0 0 0])
  ("PaymentSummary" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("option1" .
   [1 0 0 0 0 0 0])
  ("reg" .
   [1 0 0])
  ("docs" .
   [1 0 0 0])
  ("do" .
   [2 0])
  ("s/defn" .
   [3 0 0 0 0 0])
  ("register" .
   [2 0 0 0 0 0 0 0])
  ("regatta-doc" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("registration/using-option?" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("using-option?" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":option2" .
   [2 0 0 0 0 0 0 0])
  ("registration-doc" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("f" .
   [2])
  ("s/" .
   [1 0])
  (":orders" .
   [1 0 0 0 0 0 0])
  ("order-id" .
   [1 0 0 0 0 0 0 0])
  ("id" .
   [5 0])
  (":keys" .
   [4 0 0 0 0])
  ("order" .
   [2 0 0 0 0])
  ("orders" .
   [1 0 0 0 0 0])
  ("donation/FixedOrder" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Registration" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("registration" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  (":-" .
   [3 0])
  ("s/enum" .
   [1 0 0 0 0 0])
  ("form->entries" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":dev" .
   [1 0 0 0])
  (":prod" .
   [2 0 0 0 0])
  ("mode" .
   [2 0 0 0])
  (":config" .
   [1 0 0 0 0 0 0])
  (":mode" .
   [1 0 0 0 0])
  ("wrap-config" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("wrap" .
   [1 0 0 0])
  ("paddleguru.middleware.config" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":cdn" .
   [1 0 0 0])
  (":dev?" .
   [1 0 0 0 0])
  ("conf" .
   [5 0 0 0])
  ("timed-fn" .
   [1 0 0 0 0 0 0 0])
  ("paddleguru.riemann" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("chan" .
   [1 0 0 0])
  ("close!" .
   [1 0 0 0 0 0])
  ("as" .
   [0 1])
  ("global-set-key" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("kbd" .
   [1 0 0])
  ("marks" .
   [0 0 0 0 1])
  ("markdown-mode" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("copy-code-as-rtf" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("def" .
   [7 0 0])
  ("limit" .
   [1 0 0 0 0])
  ("nil" .
   [1 0 0])
  ("balance" .
   [4 0 0 0 0 0 0])
  ("bound" .
   [3 0 0 0 0])
  ("more" .
   [1 0 0 0])
  ("<=" .
   [1 0])
  ("taxes" .
   [2 0 0 1 0])
  ("recur" .
   [1 0 0 0 0])
  ("b" .
   [1])
  ("next-balance" .
   [2 0 0 0 0 0 0 1 0 0 0 0])
  ("percent" .
   [1 0 0 0 0 0 0])
  ("->" .
   [8 0])
  ("taxed-now" .
   [1 0 0 0 0 0 0 0 0])
  ("pre" .
   [1 0 0])
  ("t" .
   [2])
  ("rates" .
   [1 0 0 0 0])
  ("Integer/MAX_VALUE" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (".parse" .
   [3 0 0 0 0 0])
  ("on-load" .
   [1 0 0 0 0 0 0])
  ("st" .
   [1 0])
  (":id" .
   [2 0 0])
  ("info" .
   [1 0 0 0])
  ("input-class" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("a/sum" .
   [1 0 0 0 0])
  (":cc-fee" .
   [1 0 0 0 0 0 0])
  ("cost-entries" .
   [2 0 0 0 0 1 0 0 0 0 0 0])
  ("summary" .
   [7 0 0 0 0 0 0])
  ("invoice/regatta-payments-summary" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("regatta-id" .
   [1 0 0 0 0 0 0 0 0 0])
  ("-" .
   [1])
  (":count" .
   [4 0 0 0 0 0])
  (":entries" .
   [2 0 0 0 0 0 0 0])
  (":total" .
   [2 0 0 0 0 0])
  (":payments" .
   [1 0 0 0 0 0 0 0 0])
  ("their-cc-fee" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":fees" .
   [3 0 0 0 0])
  (":pg-extras-fee" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("e" .
   [1])
  ("pg-fee-sum" .
   [3 0 0 0 0 0 0 0 0 0])
  ("->>" .
   [1 0 0])
  (":entry-total" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("summaries" .
   [2 0 0 0 0 0 0 0 0])
  ("service-fees" .
   [3 0 0 0 0 0 0 0 0 0 0 0])
  ("invoice" .
   [2 0 0 0 0 0 0])
  ("invoice/entries-fee" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("regatta/event-pricing" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("#_" .
   [3 0])
  ("invoice/entries-fee-sum" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("option" .
   [1 0 0 0 0 0])
  ("extras" .
   [1 0 0 0 0 0])
  ("extras-fees" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("u/pennies->double" .
   [0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0])
  ("u/pennies->currency" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("u/currency-" .
   [0 0 0 0 1 0 0 0 0 0 0])
  (":processed" .
   [2 0 0 0 0 0 0 0 0 0])
  ("foo" .
   [1 0 0])
  ("registrations" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("payments" .
   [2 0 0 0 0 0 0 0])
  ("accounting" .
   [1 0 0 0 0 0 0 0 0 0])
  ("reqs" .
   [2 0 0 0])
  ("generate-invoice" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":_id" .
   [1 0 0 0])
  ("invoice-id" .
   [1 0 0 0 0 0 0 0 0 0])
  (":state" .
   [1 0 0 0 0 0])
  ("a" .
   [2])
  ("invoice/Invoice" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("payout" .
   [1 0 0 0 0 0])
  ("generate-invoice!" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("create-invoice!" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("regatta/ID" .
   [1 0 0 0 0 0 0 0 0 0])
  ("get-invoices" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("get-invoice-requirements" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("check-validity" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("point" .
   [4 0 0 0 0])
  (":position" .
   [2 0 0 0 0 0 0 0 0])
  ("props" .
   [2 0 0 0 0])
  ("marker" .
   [3 0 0 0 0 0])
  ("new-marker" .
   [1 0 0 0 0 0 0 0 0 0])
  ("Channel" .
   [3 0 0 0 0 0 0])
  (":router" .
   [4 0 0 0 0 0 0])
  (":place-update-chan" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("init" .
   [1 0 0 0])
  ("s/maybe" .
   [1 0 0 0 0 0 0])
  (":map" .
   [3 0 0 0])
  (":zoom-level" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("position" .
   [4 0 0 0 0 0 0 0])
  ("location" .
   [7 0 0 0 0 0 0 0])
  (".getZoom" .
   [1 0 0 0 0 0 0 0])
  (":longitude" .
   [1 0 0 0 0 0 0 0 0 0])
  ("l/Location" .
   [1 0 0 0 0 0 0 0 0 0])
  ("post-data" .
   [1 0 0 0 0 0 0 0 0])
  ("ctx" .
   [3 0 0])
  ("print" .
   [1 0 0 0 0])
  ("middle" .
   [0 0 0 0 0 1])
  (":url" .
   [1 0 0 0])
  (":description" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("#+clj" .
   [1 0 0 0 0])
  ("no" .
   [1 0])
  ("notifications" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("client-user" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("route/ClientUser" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("n" .
   [1])
  ("user/notifications" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("conf/get-config" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":opted-in?" .
   [1 0 0 0 0 0 0 0 0 0])
  ("racehub.config" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("current-user" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("cond->" .
   [1 0 0 0 0 0])
  (":address" .
   [1 0 0 0 0 0 0 0])
  ("str/lower-case" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":password" .
   [1 0 0 0 0 0 0 0 0])
  ("flymake-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("isHappy" .
   [1 0 0 0 0 0 0])
  ("2." .
   [1 0])
  ("lookup" .
   [2 0 0 0 0 0])
  ("keyfn" .
   [3 0 0 0 0])
  ("lambda" .
   [1 0 0 0 0 0])
  ("rain-ts" .
   [4 0 0 0 0 0 0])
  ("long-teleseries" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("base-vec" .
   [3 0 0 0 0 0 0 0])
  ("should-be" .
   [2 0 0 0 0 0 0 0 0])
  ("size" .
   [1 0 0 0])
  ("tele-series" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("3:30pm" .
   [1 0 0 0 0 0])
  ("Massage" .
   [1 0 0 0 0 0 0])))
