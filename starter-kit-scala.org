#+TITLE: Starter Kit Scala
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter Kit Scala
  :PROPERTIES:
  :results:  silent
  :END:

  Support for editing Scala.

  Here's a java hook that takes care of the two-space indent issue.

  #+BEGIN_SRC emacs-lisp
  (defun my-c-mode-hook ()
    (setq c-basic-offset 2
          c-label-offset 0))
  (add-hook 'c-mode-common-hook 'my-c-mode-hook)

  #+END_SRC

  And some configuration:

  #+begin_src emacs-lisp

;; Enable scala-mode and sbt-mode
;; (use-package scala-mode
;;   :mode "\\.s\\(cala\\|bt\\)$")
;;
;; (use-package sbt-mode
;;   :commands sbt-start sbt-command
;;   :config
;;   ;; WORKAROUND: https://github.com/ensime/emacs-sbt-mode/issues/31
;;   ;; allows using SPACE when in the minibuffer
;;   (substitute-key-definition
;;    'minibuffer-complete-word
;;    'self-insert-command
;;    minibuffer-local-completion-map))

;; Enable nice rendering of diagnostics like compile errors.
;;(use-package flycheck
;;  :init (global-flycheck-mode))

;; (use-package lsp-mode
;;   ;; Optional - enable lsp-mode automatically in scala files
;;   :hook (scala-mode . lsp)
;;   :config (setq lsp-prefer-flymake nil))

;; (use-package lsp-ui)

;; Add company-lsp backend for metals
;; (use-package company-lsp)

  (add-hook 'scala-mode-hook
            '(lambda ()
               ;; Alternatively, bind the 'newline-and-indent' command and
               ;; 'scala-indent:insert-asterisk-on-multiline-comment' to RET in
               ;; order to get indentation and asterisk-insertion within multi-line
               ;; comments.
               (local-set-key (kbd "RET")
                              '(lambda ()
                                 (interactive)
                                 (newline-and-indent)
                                 (scala-indent:insert-asterisk-on-multiline-comment)))

               ;; Bind the 'join-line' command to C-M-j. This command is normally
               ;; bound to M-^ which is hard to access, especially on some European
               ;; keyboards. The 'join-line' command has the effect or joining the
               ;; current line with the previous while fixing whitespace at the
               ;; joint.
               (local-set-key (kbd "C-M-j") 'join-line)

               ;; Bind the backtab (shift tab) to
               ;; 'scala-indent:indent-with-reluctant-strategy command. This is usefull
               ;; when using the 'eager' mode by default and you want to "outdent" a
               ;; code line as a new statement.
               (local-set-key (kbd "<backtab>") 'scala-indent:indent-with-reluctant-strategy)
               ))
  #+end_src
